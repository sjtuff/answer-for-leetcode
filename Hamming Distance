class Solution {
public:
    int hammingDistance(int x, int y) {
        int res = x^y;
        int num=0;
        for(int i=0;i<32;i++)
        {
            if((res&1)!=0) num++;
            res>>=1;
        }
        return num;
    }
};

class Solution {
public:
    int hammingDistance(int x, int y) {
        int int_part_x=0, mod_part_x=x;
        int int_part_y=0, mod_part_y=y;
        int pow_i,num=0;
        for(int i=30;i>=0;i=i-1)
        {
            pow_i=pow(2,i);
            int_part_x=mod_part_x/pow_i;
            mod_part_x=mod_part_x%pow_i;
            int_part_y=mod_part_y/pow_i;
            mod_part_y=mod_part_y%pow_i;
            if(int_part_x!=int_part_y)
            {
                num++;
            }                
            
        }
        return num;

    }
};
